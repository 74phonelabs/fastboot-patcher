#!/bin/bash
#####=============== SMALLRAT TOOLBOX ===============#####
function existance() {
   if [ -e $1 ];
   then found=true && eval $2
   else found=false && eval $3
   fi
}
csd=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
pass=":"
#####================================================#####

# i wonder if the workflow job is running the correct script?
echo 'running patcher-minimal version 5'

# exit or rename if necessary
existance $csd/recovery.img.lz4 $pass $pass
if [ $found == true ]; then
   echo "found lz4-zipped image! please unzip it yourself, and re-run this script! " && exit
else existance $csd/recovery.img $pass $pass
   if [ $found == true ]; then
      mv $csd/recovery.img $csd/raw.img &&
      echo "found unzipped image!"
      else echo "no image to patch found. please place recovery.img in folder!" && exit 1
   fi
fi

# edit raw image
echo "editing image..."
off=$(grep -ab -o SEANDROIDENFORCE raw.img | tail -n 1 | cut -d : -f 1)
dd if=raw.img of=header.img bs=4k count=$off iflag=count_bytes &>/dev/null
echo "made edit to image!"

# make key/signature
echo "making keyfile..."
existance $csd/phh.pem ":" "openssl genrsa -f4 -out $csd/phh.pem 4096 && echo 'made phh.pem'"

# fragment the edited image
existance $csd/fragments ":" "mkdir $csd/fragments"
cd fragments
echo "fragmenting image for patching! if your image is corrupted, this may not end well..."
$csd/magiskboot unpack $csd/header.img &>/dev/null
$csd/magiskboot cpio ramdisk.cpio extract &>/dev/null
echo "successfully fragmented image!"

# patch the fragmented image
echo "patching fragments (14)"
$csd/magiskboot hexpatch system/bin/recovery e10313aaf40300aa6ecc009420010034 e10313aaf40300aa6ecc0094 &>/dev/null
echo 'finished (1)' # 20 01 00 35
$csd/magiskboot hexpatch system/bin/recovery eec3009420010034 eec3009420010035 &>/dev/null
echo 'finished (2)'
$csd/magiskboot hexpatch system/bin/recovery 3ad3009420010034 3ad3009420010035 &>/dev/null
echo 'finished (3)'
$csd/magiskboot hexpatch system/bin/recovery 50c0009420010034 50c0009420010035 &>/dev/null
echo 'finished (4)'
$csd/magiskboot hexpatch system/bin/recovery 080109aae80000b4 080109aae80000b5 &>/dev/null
echo 'finished (5)'
$csd/magiskboot hexpatch system/bin/recovery 20f0a6ef38b1681c 20f0a6ef38b9681c &>/dev/null
echo 'finished (6)'
$csd/magiskboot hexpatch system/bin/recovery 23f03aed38b1681c 23f03aed38b9681c &>/dev/null
echo 'finished (7)'
$csd/magiskboot hexpatch system/bin/recovery 20f09eef38b1681c 20f09eef38b9681c &>/dev/null
echo 'finished (8)'
$csd/magiskboot hexpatch system/bin/recovery 26f0ceec30b1681c 26f0ceec30b9681c &>/dev/null
echo 'finished (9)'
$csd/magiskboot hexpatch system/bin/recovery 24f0fcee30b1681c 24f0fcee30b9681c &>/dev/null
echo 'finished (10)'
$csd/magiskboot hexpatch system/bin/recovery 27f02eeb30b1681c 27f02eeb30b9681c &>/dev/null
echo 'finished (11)'
$csd/magiskboot hexpatch system/bin/recovery b4f082ee28b1701c b4f082ee28b970c1 &>/dev/null
echo 'finished (12)'
$csd/magiskboot hexpatch system/bin/recovery 9ef0f4ec28b1701c 9ef0f4ec28b9701c &>/dev/null
echo 'finished (13)'
$csd/magiskboot cpio ramdisk.cpio 'add 0755 system/bin/recovery system/bin/recovery' &>/dev/null
echo 'finished (14)'
echo "successfully finished patch to fragmented image!"

# reassemble fragmented image
echo "attempting to reassemble fragmented image!"
$csd/magiskboot repack $csd/header.img $csd/output.img &>/dev/null
echo "assembled output.img!" && cd $csd
existance $csd/output.img "echo output.img found" "echo output.img not found, exiting && exit 1"

# sign patched image with keyfile
echo "extracting public key to phh.pub.bin..."
python3 $csd/avbtool extract_public_key --key $csd/phh.pem --output $csd/phh.pub.bin &&
echo "signing patched image with key..."
python3 $csd/avbtool add_hash_footer --image $csd/output.img --partition_name recovery --partition_size $(wc -c $csd/raw.img | cut -f 1 -d ' ') --key $csd/phh.pem --algorithm SHA256_RSA4096
echo "signed image successfully!"

# package image for use in odin
echo "packaging image for odin..."
tar -cvf $csd/output.tar $csd/output.img &&
md5sum -t $csd/output.tar >> $csd/output.tar &&
mv $csd/output.tar $csd/output.tar.md5 &&
echo "successfully packaged output.img -> output.tar.md5"

# dispose of any unnecessary files
echo "cleaning up the directory..."
sudo rm -rf $csd/fragments &&
sudo rm -rf $csd/header.img &&
mv $csd/raw.img $csd/recovery.img &&
sudo rm -rf $csd/keys/phh.pem &&
echo "enjoy! hope what you're trying to do works."
